<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:q8="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders" xmlns:q2="clr-namespace:Bonsai.Video;assembly=Bonsai.Video" xmlns:q3="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q4="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q5="clr-namespace:Bonsai.Shaders.Input;assembly=Bonsai.Shaders" xmlns:q6="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q7="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:UpdateTexture">
          <q1:TextureName>Image</q1:TextureName>
          <q1:InternalFormat>Rgba</q1:InternalFormat>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:WindowClosed" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="TakeUntil" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:VideoCaptureDevice">
          <q2:Index>0</q2:Index>
          <q2:Format>
            <q2:FrameSize>
              <q2:Width>1280</q2:Width>
              <q2:Height>720</q2:Height>
            </q2:FrameSize>
            <q2:AverageFrameRate>29</q2:AverageFrameRate>
            <q2:MaximumFrameRate>30</q2:MaximumFrameRate>
            <q2:BitCount>16</q2:BitCount>
          </q2:Format>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="SampleInterval">
          <Interval>PT0.1S</Interval>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Main workflow</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:SaveImage">
                <q3:FileName>C:\Users\Gel imager\Pictures\Camera Roll\Gel image .jpg</q3:FileName>
                <q3:Suffix>Timestamp</q3:Suffix>
              </Combinator>
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>FramesToSum</Name>
              <BufferSize>1</BufferSize>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Up/down: control exposure</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Scan">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Accumulation</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Value</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Zip" />
                        </Expression>
                        <Expression xsi:type="q4:PythonTransform">
                          <q4:Name>Enforce min value</q4:Name>
                          <q4:Script>from System import Single
@returns(Single)
def process(value):
  return 1 if value&lt;=1 else value</q4:Script>
                        </Expression>
                        <Expression xsi:type="Add" />
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>0</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>4</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>4</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>4</From>
                          <To>6</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>6</From>
                          <To>5</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Take">
                      <Count>1</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>-1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Condition">
                    <Name>UpPressed</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Condition">
                    <Name>DownPressed</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="WorkflowPropertyOfKey">
                      <Value>Up</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="WorkflowPropertyOfKey">
                      <Value>Down</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.EventArgs.Key</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q5:KeyDown" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>1</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>1</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>9</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>8</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>10</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>12</From>
                    <To>11</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Calculate FPS</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q6:Average" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q6:Buffer">
                      <q6:Count>10</q6:Count>
                      <q6:Skip>1</q6:Skip>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="q4:ExpressionTransform">
                    <q4:Expression>1000/it</q4:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Interval.TotalMilliseconds</Selector>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="TimeInterval" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Take photo</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q7:AudioPlayback">
                      <q7:DeviceName>Generic Software on Headphones (SBH20 Stereo)</q7:DeviceName>
                      <q7:Frequency>44100</q7:Frequency>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SelectMany">
                    <Name>Camera snap</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="q7:AudioReader">
                            <q7:FileName>Camera-shutter.wav</q7:FileName>
                            <q7:BufferLength>250</q7:BufferLength>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Take">
                            <Count>1</Count>
                          </Combinator>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>1</From>
                          <To>0</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Sample" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Image Preview</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Condition">
                    <Name>ButtonPressed</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="WorkflowPropertyOfKey">
                      <Value>Space</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.EventArgs.Key</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q5:KeyDown" />
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="WorkflowPropertyOfKey">
                      <Value>Enter</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.EventArgs.Key</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Merge" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>2</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>11</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>10</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>9</From>
                    <To>11</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>10</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>11</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Grayscale" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="q4:PythonTransform">
              <q4:Script>import subprocess
@returns(bool)
def process(value):
  subprocess.Popen(['powershell.exe','-ExecutionPolicy', 'Bypass',
                  '-file', 'C:\Users\Gel imager\Documents\Gel-imager\PhotoSender.ps1',
                  '-dir', 'C:\Users\Gel imager\Pictures\Camera Roll'])
  return True</q4:Script>
            </Expression>
            <Expression xsi:type="q4:PythonTransform">
              <q4:Name>Draw text</q4:Name>
              <q4:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
import datetime
font=Font(2)
#font=CV.InitFont(CV_FONT_HERSHEY_SIMPLEX, hscale=6, vscale=1.0, shear=0, thickness=1, lineType=8)

@returns(IplImage)
def process(value):
  image = value.Item1
  exptime = value.Item2
  stability = value.Item3
  invertoption = value.Item4
  factor = value.Item5
  #exptime = numframes * 0.1
  text = datetime.datetime.now().strftime("%x %X")
  text = text + " exposure = %0.2fs" % exptime
  if factor&gt;1.0:
    text = text + " zoom %0.1fx" % factor
    newWidth = image.Width/factor
    newHeight = image.Height/factor
    newX = (image.Width - newWidth)/2
    newY = (image.Height - newHeight)/2
    roi = image.GetSubRect(Rect(newX,newY,newWidth, newHeight))
    image2 = IplImage(image.Size, image.Depth, 1)
    CV.Resize(roi, image2)
    image = image2
  inverted = IplImage(image.Size, image.Depth, 1)
  output = IplImage(image.Size, image.Depth, 3)
  text = text + " %0.0f%% stable" % stability
  if invertoption:
    CV.Not(image, inverted)
    textcol = Scalar.Rgb(0,127,0)
  else:
    inverted = image
    textcol = Scalar.Rgb(0,255,0)
  CV.CvtColor(inverted, output, ColorConversion.Gray2Bgr)
  CV.PutText(output,text,Point(15,30),font, textcol)
  return output
</q4:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Sample" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="PublishSubject">
              <Name>FPS</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Switch" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Buffer">
                <Count>30</Count>
                <Skip>1</Skip>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FramesToSum</Name>
            </Expression>
            <Expression xsi:type="PublishSubject">
              <Name>Video</Name>
            </Expression>
            <Expression xsi:type="PublishSubject">
              <Name>Image Preview</Name>
            </Expression>
            <Expression xsi:type="WindowWorkflow">
              <Name />
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Video</Name>
                  </Expression>
                  <Expression xsi:type="SelectMany">
                    <Name>Exposure</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="TakeLast">
                            <Count>15</Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Accumulate" />
                        <Expression xsi:type="ExternalizedPropertyOfInt32TakeLast">
                          <MemberName>Count</MemberName>
                          <Name>Count</Name>
                          <Value>15</Value>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Concat" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Last" />
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>5</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>6</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>4</From>
                          <To>2</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>5</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>6</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="ExternalizedPropertyOfInt32ElementCountWindow">
                    <MemberName>Count</MemberName>
                    <Name>Count</Name>
                    <Value>0</Value>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source2</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Estimate exposure time</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Divide" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="CombineLatest" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>FramesToSum</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Val0</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>FPS</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>1</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="TakeUntil" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Image Preview</Name>
            </Expression>
            <Expression xsi:type="q4:PythonTransform">
              <q4:Name>Draw please wait message</q4:Name>
              <q4:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
import datetime
textcol = Scalar.Rgb(0,255,0)
font=Font(2)
#font=CV.InitFont(CV_FONT_HERSHEY_SIMPLEX, hscale=6, vscale=1.0, shear=0, thickness=1, lineType=8)

@returns(IplImage)
def process(value):
  image = value
  text = "Please wait... filling frame buffer"
  output = IplImage(image.Size, image.Depth, 3)
  CV.CvtColor(image, output, ColorConversion.Gray2Bgr)
  CV.PutText(output,text,Point(15,30),font, textcol)
  return output
</q4:Script>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32Buffer">
              <MemberName>Count</MemberName>
              <Name>FrameBuffer size</Name>
              <Value>30</Value>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Calculate stability</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Skip">
                      <Count>1</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q6:Average" />
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q6:Abs" />
                  </Expression>
                  <Expression xsi:type="Subtract" />
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Val0</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Zip" />
                  </Expression>
                  <Expression xsi:type="q4:ExpressionTransform">
                    <q4:Expression>Math.Round(100-it)</q4:Expression>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>7</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>8</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>7</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Invert image option</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="q4:PythonTransform">
                    <q4:Name>Invert option</q4:Name>
                    <q4:Script>invert = False #set default value
@returns(bool)
def process(value):
  global invert
  invert = not invert
  return invert</q4:Script>
                  </Expression>
                  <Expression xsi:type="Condition">
                    <Name>I key pressed</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.EventArgs.Key</Selector>
                        </Expression>
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="WorkflowPropertyOfKey">
                            <Value>I</Value>
                          </Operand>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q5:KeyDown" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>false</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Take">
                      <Count>1</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Merge" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>6</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Left/right: zoom</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Scan">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Accumulation</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Source.Value</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="Zip" />
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Condition">
                          <Name>1 or more</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="GreaterThanOrEqual">
                                <Operand xsi:type="FloatProperty">
                                  <Value>1</Value>
                                </Operand>
                              </Expression>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge>
                                <From>0</From>
                                <To>2</To>
                                <Label>Source1</Label>
                              </Edge>
                              <Edge>
                                <From>1</From>
                                <To>0</To>
                                <Label>Source1</Label>
                              </Edge>
                            </Edges>
                          </Workflow>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>3</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>1</From>
                          <To>0</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>1</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>3</To>
                          <Label>Source2</Label>
                        </Edge>
                        <Edge>
                          <From>3</From>
                          <To>4</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>4</From>
                          <To>6</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>6</From>
                          <To>5</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>0.1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>-0.1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="Take">
                      <Count>1</Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Condition">
                    <Name>Press Right</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="WorkflowPropertyOfKeys">
                            <Value>Right</Value>
                          </Operand>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Condition">
                    <Name>Press Left</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="WorkflowPropertyOfKeys">
                            <Value>Left</Value>
                          </Operand>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge>
                          <From>0</From>
                          <To>2</To>
                          <Label>Source1</Label>
                        </Edge>
                        <Edge>
                          <From>2</From>
                          <To>1</To>
                          <Label>Source1</Label>
                        </Edge>
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q8:KeyDown">
                      <q8:Filter>None</q8:Filter>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>9</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>1</To>
                    <Label>Source2</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>1</To>
                    <Label>Source3</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>6</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>7</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>5</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>8</From>
                    <To>6</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>13</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>15</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>23</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>18</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>11</From>
              <To>10</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>12</From>
              <To>11</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>14</From>
              <To>12</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>14</From>
              <To>11</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>14</From>
              <To>25</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>15</From>
              <To>17</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>16</From>
              <To>19</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>19</From>
              <To>14</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>20</From>
              <To>12</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>21</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>22</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>22</From>
              <To>21</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>23</From>
              <To>21</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>24</From>
              <To>15</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>25</From>
              <To>12</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>26</From>
              <To>12</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>27</From>
              <To>12</To>
              <Label>Source5</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="TakeUntil" />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Press Esc to quit</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Condition">
              <Name>Esc pressed</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.EventArgs.Key</Selector>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="WorkflowPropertyOfKey">
                      <Value>Escape</Value>
                    </Operand>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>3</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q5:KeyDown" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>6</To>
        <Label>Source2</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Shaders.UpdateTexture, Bonsai.Shaders, Version=0.14.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Shaders.WindowClosed, Bonsai.Shaders, Version=0.14.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.TakeUntil, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Video.VideoCaptureDevice, Bonsai.Video, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.SampleInterval, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Merge, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.SaveImage, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.AddBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ScanBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.FloatProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[OpenTK.Input.Key, OpenTK, Version=1.1.0.0, Culture=neutral, PublicKeyToken=bad199fe84eb3df4]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Shaders.Input.KeyDown, Bonsai.Shaders, Version=0.14.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Average, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Buffer, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.TimeInterval, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Audio.AudioPlayback, Bonsai.Audio, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Audio.AudioReader, Bonsai.Audio, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Sample, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Switch, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Buffer, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.TakeLast, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.AccumulateBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.TakeLast, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Concat, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Last, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.ElementCountWindow, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DivideBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.Buffer, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Abs, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SubtractBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BooleanProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.GreaterThanOrEqualBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>